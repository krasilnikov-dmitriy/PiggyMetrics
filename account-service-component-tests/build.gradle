import java.time.Duration

apply plugin: 'groovy'
apply plugin: 'docker-compose'

description = """account-service-component-tests"""

configurations {
    agent
}

ext {
    restAssuredVersion = '2.9.0'
}

dependencies {
    agent "org.aspectj:aspectjweaver:${aspectjVersion}"

    compile "com.jayway.restassured:rest-assured:$restAssuredVersion"
    compile "com.jayway.restassured:json-schema-validator:$restAssuredVersion"
    compile "com.jayway.jsonpath:json-path-assert:2.2.0"
    compile "com.github.tomakehurst:wiremock:2.1.11"
    compile "org.codehaus.groovy:groovy-all:2.4.4"

    testCompile "ru.yandex.qatools.allure:allure-testng-adaptor:${allureVersion}"
    testCompile "org.aspectj:aspectjweaver:${aspectjVersion}"
    testCompile "ch.qos.logback:logback-classic:1.1.3"
    testCompile "org.testng:testng:6.9.13.6"
}

dockerCompose {
    useComposeFiles = [new File(project.rootProject.getProjectDir(), 'docker-compose.account-service.component.yml').absolutePath]
    stopContainers = true
    removeContainers = true
    removeVolumes = true
    waitForHealthyStateTimeout = Duration.ofMinutes(1)
    waitForTcpPortsTimeout = Duration.ofMinutes(3)
}
dockerCompose.isRequiredBy(test)

test {
//    useTestNG() {
//        setSuiteName("account-service-component-tests")
////        options.listeners << 'com.epam.reportportal.testng.ReportPortalTestNGListener'
//    }
}



test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"

    dockerCompose.exposeAsEnvironment(test)

    def accountService = dockerCompose.servicesInfos['account-service']
    environment 'ACCOUNT_SERVICE_HOST', "http://${accountService.host}"
    environment 'ACCOUNT_SERVICE_PORT', accountService.ports[6000]
    environment 'ACCOUNT_SERVICE_BASE_PATH', '/accounts'
}
